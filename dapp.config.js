export default {
  name: 'Underscore Finance',
  description: 'Underscore Finance',
  targetPath: './src/contracts',
  // eslint-disable-next-line no-undef
  etherscanApiKey: process.env.BASESCAN_API_KEY,
  etherscanApi: 'https://api.basescan.org',
  isModule: true,
  isSdk: true,
  contracts: {
    AddyRegistry: { address: '0x7BcD6d471D1A068012A79347C7a944d1Df01a1AE' },
    AgentFactory_v2: { address: '0x484637E77C66eaE88C8Edb64E09c5057F52866BE' },
    AgentFactory: { address: '0xd5a1cc447D94114136A5a8828F59d5a1cfe65038' },
    UserWallet: { isTemplate: true, address: '0xe43D5bD11a2A6A9348EFC516ad9Ac3D32164A5A0' },
    UserWalletConfig: { isTemplate: true, address: '0x61293F1bF484d20dcc841175b4E4A0F46c26658c' },
    Agent: { isTemplate: true, address: '0x76Eb19Ae42c07a7AD50aFD58b579a7c45bd70183' },
    Agent_v1: { isTemplate: true, address: '0x70418b3AAa1044eC8bFF6a461B4E43460bb5699E' },
    LegoRegistry: { address: '0x8D8593FE154d14976352FA2CE30322EcDF99C72a' },
    OracleRegistry: { address: '0xe133F22aAdC23F9B7ca7A9f16B6D9A0C662Cf90b' },
    PriceSheets: { address: '0xD15331Cf355B5D8EF017c1FD49516b95593FA6aA' },
    LegoHelper: { address: '0xF80b87DD1096f9E68739f55B9807Df1CB21422E3' },
    ChainlinkFeeds: { address: '0x605c6ab843d65dD14b00CEB33f445D7f9bbb7930' },
    PythFeeds: { address: '0x415a2fe1e591619c6c12Df09eAEc8a598224F9fE' },
    StorkFeeds: { address: '0xD47D74C56c17Bf3B7236e8a7eb97D3194c3d477c' },
    LegoAaveV3: { address: '0x8c94cfC11A9340e45032e5021881cc312993Bf15' },
    LegoCompoundV3: { address: '0xF86d1D68C951d163aBc383C508740df6ddED500C' },
    LegoEuler: { address: '0xB2a1cdC1D896eE37cD432b591FeC2664294286FB' },
    LegoFluid: { address: '0xc4a864F5543D3CDB06D5F3419c18315f2cDe9675' },
    LegoMoonwell: { address: '0x3890573c04A13d1D982104c7DaDb17F66cb1aE6c' },
    LegoMorpho: { address: '0x825309418B066603C2732fdA08d39A79CAA5CC8e' },
    LegoSky: { address: '0x3514536163D5c0c5207A6A1230fc76bEe8CE8506' },
    LegoAeroClassic: { address: '0x61C8D98F01B066fA99eb2cf2E6069a7e5d891313' },
    LegoAeroSlipstream: { address: '0x0891DdE2eC48f9663A1c9a81820c283dD8846594' },
    LegoCurve: { address: '0x6118D44763a556Cf8d113ebBce853E14a0C67997' },
    LegoUniswapV2: { address: '0x9973e271Bd6cAb8Ce1CAEaBAB8a1bEbcB6EdD535' },
    LegoUniswapV3: { address: '0x6bfd82031a968685358DA84ebB797c3C068EC704' },

    ERC20: {
      isTemplate: true,
      abi: [
        {
          type: 'event',
          name: 'Transfer',
          inputs: [
            {
              name: 'sender',
              type: 'address',
              indexed: true,
            },
            {
              name: 'receiver',
              type: 'address',
              indexed: true,
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'Approval',
          inputs: [
            {
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              name: 'spender',
              type: 'address',
              indexed: true,
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
            },
          ],
          anonymous: false,
        },
        {
          type: 'function',
          name: 'name',
          stateMutability: 'pure',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'string',
            },
          ],
        },
        {
          type: 'function',
          name: 'symbol',
          stateMutability: 'pure',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'string',
            },
          ],
        },
        {
          type: 'function',
          name: 'decimals',
          stateMutability: 'pure',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'uint8',
            },
          ],
        },
        {
          type: 'function',
          name: 'transfer',
          stateMutability: 'nonpayable',
          inputs: [
            {
              name: '_recipient',
              type: 'address',
            },
            {
              name: '_amount',
              type: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          type: 'function',
          name: 'transferFrom',
          stateMutability: 'nonpayable',
          inputs: [
            {
              name: '_sender',
              type: 'address',
            },
            {
              name: '_recipient',
              type: 'address',
            },
            {
              name: '_amount',
              type: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          type: 'function',
          name: 'approve',
          stateMutability: 'nonpayable',
          inputs: [
            {
              name: '_spender',
              type: 'address',
            },
            {
              name: '_amount',
              type: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          type: 'function',
          name: 'permit',
          stateMutability: 'nonpayable',
          inputs: [
            {
              name: '_owner',
              type: 'address',
            },
            {
              name: '_spender',
              type: 'address',
            },
            {
              name: '_amount',
              type: 'uint256',
            },
            {
              name: '_expiry',
              type: 'uint256',
            },
            {
              name: '_signature',
              type: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          type: 'function',
          name: 'totalSupply',
          stateMutability: 'view',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          type: 'function',
          name: 'balanceOf',
          stateMutability: 'view',
          inputs: [
            {
              name: 'arg0',
              type: 'address',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          type: 'function',
          name: 'allowance',
          stateMutability: 'view',
          inputs: [
            {
              name: 'arg0',
              type: 'address',
            },
            {
              name: 'arg1',
              type: 'address',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          type: 'function',
          name: 'nonces',
          stateMutability: 'view',
          inputs: [
            {
              name: 'arg0',
              type: 'address',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          type: 'function',
          name: 'DOMAIN_SEPARATOR',
          stateMutability: 'view',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'bytes32',
            },
          ],
        },
      ],
    },
    LegoCredit: {
      isTemplate: true,
      abi: [
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'borrow',
          inputs: [
            { name: '_borrowAsset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'borrow',
          inputs: [
            { name: '_borrowAsset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'repayDebt',
          inputs: [
            { name: '_paymentAsset', type: 'address' },
            { name: '_paymentAmount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'repayDebt',
          inputs: [
            { name: '_paymentAsset', type: 'address' },
            { name: '_paymentAmount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
      ],
    },
    LegoYield: {
      isTemplate: true,
      abi: [
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'depositTokens',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_vault', type: 'address' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'depositTokens',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_vault', type: 'address' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'withdrawTokens',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_vaultToken', type: 'address' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'withdrawTokens',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_amount', type: 'uint256' },
            { name: '_vaultToken', type: 'address' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getAssetOpportunities',
          inputs: [{ name: '_asset', type: 'address' }],
          outputs: [{ name: '', type: 'address[]' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUnderlyingAmount',
          inputs: [
            { name: '_vaultToken', type: 'address' },
            { name: '_vaultTokenAmount', type: 'uint256' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUnderlyingAsset',
          inputs: [{ name: '_vaultToken', type: 'address' }],
          outputs: [{ name: '', type: 'address' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getAssets',
          inputs: [],
          outputs: [{ name: '', type: 'address[]' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'isVaultToken',
          inputs: [{ name: '_vaultToken', type: 'address' }],
          outputs: [{ name: '', type: 'bool' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getVaultTokenAmount',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_assetAmount', type: 'uint256' },
            { name: '_vaultToken', type: 'address' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUsdValueOfVaultToken',
          inputs: [
            { name: '_vaultToken', type: 'address' },
            { name: '_vaultTokenAmount', type: 'uint256' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUsdValueOfVaultToken',
          inputs: [
            { name: '_vaultToken', type: 'address' },
            { name: '_vaultTokenAmount', type: 'uint256' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUnderlyingData',
          inputs: [
            { name: '_vaultToken', type: 'address' },
            { name: '_vaultTokenAmount', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getUnderlyingData',
          inputs: [
            { name: '_vaultToken', type: 'address' },
            { name: '_vaultTokenAmount', type: 'uint256' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'totalAssets',
          inputs: [{ name: '_vaultToken', type: 'address' }],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'totalBorrows',
          inputs: [{ name: '_vaultToken', type: 'address' }],
          outputs: [{ name: '', type: 'uint256' }],
        },
      ],
    },
    LegoCommon: {
      isTemplate: true,
      abi: [
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getRegistries',
          inputs: [],
          outputs: [{ name: '', type: 'address[]' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getAccessForLego',
          inputs: [{ name: '_user', type: 'address' }],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'string' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'claimRewards',
          inputs: [
            { name: '_user', type: 'address' },
            { name: '_market', type: 'address' },
            { name: '_rewardToken', type: 'address' },
            { name: '_rewardAmount', type: 'uint256' },
            { name: '_proof', type: 'bytes32' },
          ],
          outputs: [],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'recoverFunds',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [{ name: '', type: 'bool' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'legoId',
          inputs: [],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setLegoId',
          inputs: [{ name: '_legoId', type: 'uint256' }],
          outputs: [{ name: '', type: 'bool' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'hasClaimableRewards',
          inputs: [{ name: '_user', type: 'address' }],
          outputs: [{ name: '', type: 'bool' }],
        },
      ],
    },
    LegoDex: {
      isTemplate: true,
      abi: [
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'swapTokens',
          inputs: [
            { name: '_amountIn', type: 'uint256' },
            { name: '_minAmountOut', type: 'uint256' },
            { name: '_tokenPath', type: 'address[]' },
            { name: '_poolPath', type: 'address[]' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'swapTokens',
          inputs: [
            { name: '_amountIn', type: 'uint256' },
            { name: '_minAmountOut', type: 'uint256' },
            { name: '_tokenPath', type: 'address[]' },
            { name: '_poolPath', type: 'address[]' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'addLiquidity',
          inputs: [
            { name: '_nftTokenId', type: 'uint256' },
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_tickLower', type: 'int24' },
            { name: '_tickUpper', type: 'int24' },
            { name: '_amountA', type: 'uint256' },
            { name: '_amountB', type: 'uint256' },
            { name: '_minAmountA', type: 'uint256' },
            { name: '_minAmountB', type: 'uint256' },
            { name: '_minLpAmount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'addLiquidity',
          inputs: [
            { name: '_nftTokenId', type: 'uint256' },
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_tickLower', type: 'int24' },
            { name: '_tickUpper', type: 'int24' },
            { name: '_amountA', type: 'uint256' },
            { name: '_amountB', type: 'uint256' },
            { name: '_minAmountA', type: 'uint256' },
            { name: '_minAmountB', type: 'uint256' },
            { name: '_minLpAmount', type: 'uint256' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'removeLiquidity',
          inputs: [
            { name: '_nftTokenId', type: 'uint256' },
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_lpToken', type: 'address' },
            { name: '_liqToRemove', type: 'uint256' },
            { name: '_minAmountA', type: 'uint256' },
            { name: '_minAmountB', type: 'uint256' },
            { name: '_recipient', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'bool' },
          ],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'removeLiquidity',
          inputs: [
            { name: '_nftTokenId', type: 'uint256' },
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_lpToken', type: 'address' },
            { name: '_liqToRemove', type: 'uint256' },
            { name: '_minAmountA', type: 'uint256' },
            { name: '_minAmountB', type: 'uint256' },
            { name: '_recipient', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'bool' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getLpToken',
          inputs: [{ name: '_pool', type: 'address' }],
          outputs: [{ name: '', type: 'address' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPoolForLpToken',
          inputs: [{ name: '_lpToken', type: 'address' }],
          outputs: [{ name: '', type: 'address' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getSwapAmountOut',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_tokenIn', type: 'address' },
            { name: '_tokenOut', type: 'address' },
            { name: '_amountIn', type: 'uint256' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getSwapAmountIn',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_tokenIn', type: 'address' },
            { name: '_tokenOut', type: 'address' },
            { name: '_amountOut', type: 'uint256' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getAddLiqAmountsIn',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_availAmountA', type: 'uint256' },
            { name: '_availAmountB', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getRemoveLiqAmountsOut',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_tokenA', type: 'address' },
            { name: '_tokenB', type: 'address' },
            { name: '_lpAmount', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPriceUnsafe',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_targetToken', type: 'address' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPriceUnsafe',
          inputs: [
            { name: '_pool', type: 'address' },
            { name: '_targetToken', type: 'address' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getBestSwapAmountOut',
          inputs: [
            { name: '_tokenIn', type: 'address' },
            { name: '_tokenOut', type: 'address' },
            { name: '_amountIn', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getBestSwapAmountIn',
          inputs: [
            { name: '_tokenIn', type: 'address' },
            { name: '_tokenOut', type: 'address' },
            { name: '_amountOut', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'address' },
            { name: '', type: 'uint256' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getCoreRouterPool',
          inputs: [],
          outputs: [{ name: '', type: 'address' }],
        },
      ],
    },
    OracleParser: {
      isTemplate: true,
      abi: [
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPrice',
          inputs: [{ name: '_asset', type: 'address' }],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPrice',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_staleTime', type: 'uint256' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPrice',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_staleTime', type: 'uint256' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPriceAndHasFeed',
          inputs: [{ name: '_asset', type: 'address' }],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'bool' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPriceAndHasFeed',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_staleTime', type: 'uint256' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'bool' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getPriceAndHasFeed',
          inputs: [
            { name: '_asset', type: 'address' },
            { name: '_staleTime', type: 'uint256' },
            { name: '_oracleRegistry', type: 'address' },
          ],
          outputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'bool' },
          ],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'hasPriceFeed',
          inputs: [{ name: '_asset', type: 'address' }],
          outputs: [{ name: '', type: 'bool' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'oraclePartnerId',
          inputs: [],
          outputs: [{ name: '', type: 'uint256' }],
        },
        {
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setOraclePartnerId',
          inputs: [{ name: '_oracleId', type: 'uint256' }],
          outputs: [{ name: '', type: 'bool' }],
        },
        {
          stateMutability: 'view',
          type: 'function',
          name: 'getConfiguredAssets',
          inputs: [],
          outputs: [{ name: '', type: 'address[]' }],
        },
      ],
    },
  },
}
