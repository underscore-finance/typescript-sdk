/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
/* @ts-nocheck */

import { singleQuery } from '@dappql/async'
import { PublicClient, WalletClient } from 'viem'

type ExtractArgs<T> = T extends (...args: infer P) => any ? P : never
type Address = `0x${string}`

export const abi = [
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getTransferFundsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_recipient',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getTransferFundsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_recipient',
        type: 'address',
      },
      {
        name: '_asset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getTransferFundsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_recipient',
        type: 'address',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getTransferFundsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_recipient',
        type: 'address',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getTransferFundsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_recipient',
        type: 'address',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_vaultAddr',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_vaultAddr',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_vaultAddr',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_vaultAddr',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDepositForYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_vaultAddr',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getWithdrawFromYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_vaultToken',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getWithdrawFromYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_vaultToken',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getWithdrawFromYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_vaultToken',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getWithdrawFromYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_vaultToken',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getWithdrawFromYieldHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_vaultToken',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
      {
        name: '_toVaultAddr',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
      {
        name: '_toVaultAddr',
        type: 'address',
      },
      {
        name: '_fromVaultAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
      {
        name: '_toVaultAddr',
        type: 'address',
      },
      {
        name: '_fromVaultAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
      {
        name: '_toVaultAddr',
        type: 'address',
      },
      {
        name: '_fromVaultAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRebalanceYieldPositionHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_fromLegoId',
        type: 'uint256',
      },
      {
        name: '_fromVaultToken',
        type: 'address',
      },
      {
        name: '_toLegoId',
        type: 'uint256',
      },
      {
        name: '_toVaultAddr',
        type: 'address',
      },
      {
        name: '_fromVaultAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getSwapTokensHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_swapInstructions',
        type: 'tuple[]',
        components: [
          {
            name: 'legoId',
            type: 'uint256',
          },
          {
            name: 'amountIn',
            type: 'uint256',
          },
          {
            name: 'minAmountOut',
            type: 'uint256',
          },
          {
            name: 'tokenPath',
            type: 'address[]',
          },
          {
            name: 'poolPath',
            type: 'address[]',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getSwapTokensHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_swapInstructions',
        type: 'tuple[]',
        components: [
          {
            name: 'legoId',
            type: 'uint256',
          },
          {
            name: 'amountIn',
            type: 'uint256',
          },
          {
            name: 'minAmountOut',
            type: 'uint256',
          },
          {
            name: 'tokenPath',
            type: 'address[]',
          },
          {
            name: 'poolPath',
            type: 'address[]',
          },
        ],
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getSwapTokensHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_swapInstructions',
        type: 'tuple[]',
        components: [
          {
            name: 'legoId',
            type: 'uint256',
          },
          {
            name: 'amountIn',
            type: 'uint256',
          },
          {
            name: 'minAmountOut',
            type: 'uint256',
          },
          {
            name: 'tokenPath',
            type: 'address[]',
          },
          {
            name: 'poolPath',
            type: 'address[]',
          },
        ],
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_amountIn',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_amountIn',
        type: 'uint256',
      },
      {
        name: '_minAmountOut',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_amountIn',
        type: 'uint256',
      },
      {
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_amountIn',
        type: 'uint256',
      },
      {
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_amountIn',
        type: 'uint256',
      },
      {
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConfirmMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConfirmMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConfirmMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConfirmMintOrRedeemAssetHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_tokenIn',
        type: 'address',
      },
      {
        name: '_tokenOut',
        type: 'address',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveCollateralHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_asset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBorrowHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_borrowAsset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBorrowHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_borrowAsset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBorrowHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_borrowAsset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBorrowHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_borrowAsset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBorrowHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_borrowAsset',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRepayDebtHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_paymentAsset',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRepayDebtHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_paymentAsset',
        type: 'address',
      },
      {
        name: '_paymentAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRepayDebtHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_paymentAsset',
        type: 'address',
      },
      {
        name: '_paymentAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRepayDebtHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_paymentAsset',
        type: 'address',
      },
      {
        name: '_paymentAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRepayDebtHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_paymentAsset',
        type: 'address',
      },
      {
        name: '_paymentAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_rewardToken',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_rewardToken',
        type: 'address',
      },
      {
        name: '_rewardAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_rewardToken',
        type: 'address',
      },
      {
        name: '_rewardAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_rewardToken',
        type: 'address',
      },
      {
        name: '_rewardAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getClaimRewardsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_rewardToken',
        type: 'address',
      },
      {
        name: '_rewardAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertWethToEthHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertWethToEthHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertWethToEthHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertWethToEthHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertEthToWethHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertEthToWethHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertEthToWethHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getConvertEthToWethHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_minLpAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_minLpAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_minLpAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_minLpAmount',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_lpToken',
        type: 'address',
      },
      {
        name: '_lpAmount',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_amountA',
        type: 'uint256',
      },
      {
        name: '_amountB',
        type: 'uint256',
      },
      {
        name: '_tickLower',
        type: 'int24',
      },
      {
        name: '_tickUpper',
        type: 'int24',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRemoveLiquidityConcentratedHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_legoId',
        type: 'uint256',
      },
      {
        name: '_nftAddr',
        type: 'address',
      },
      {
        name: '_nftTokenId',
        type: 'uint256',
      },
      {
        name: '_pool',
        type: 'address',
      },
      {
        name: '_tokenA',
        type: 'address',
      },
      {
        name: '_tokenB',
        type: 'address',
      },
      {
        name: '_liqToRemove',
        type: 'uint256',
      },
      {
        name: '_minAmountA',
        type: 'uint256',
      },
      {
        name: '_minAmountB',
        type: 'uint256',
      },
      {
        name: '_extraData',
        type: 'bytes32',
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBatchActionsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_instructions',
        type: 'tuple[]',
        components: [
          {
            name: 'usePrevAmountOut',
            type: 'bool',
          },
          {
            name: 'action',
            type: 'uint8',
          },
          {
            name: 'legoId',
            type: 'uint16',
          },
          {
            name: 'asset',
            type: 'address',
          },
          {
            name: 'target',
            type: 'address',
          },
          {
            name: 'amount',
            type: 'uint256',
          },
          {
            name: 'asset2',
            type: 'address',
          },
          {
            name: 'amount2',
            type: 'uint256',
          },
          {
            name: 'minOut1',
            type: 'uint256',
          },
          {
            name: 'minOut2',
            type: 'uint256',
          },
          {
            name: 'tickLower',
            type: 'int24',
          },
          {
            name: 'tickUpper',
            type: 'int24',
          },
          {
            name: 'extraData',
            type: 'bytes32',
          },
          {
            name: 'auxData',
            type: 'bytes32',
          },
          {
            name: 'swapInstructions',
            type: 'tuple[]',
            components: [
              {
                name: 'legoId',
                type: 'uint256',
              },
              {
                name: 'amountIn',
                type: 'uint256',
              },
              {
                name: 'minAmountOut',
                type: 'uint256',
              },
              {
                name: 'tokenPath',
                type: 'address[]',
              },
              {
                name: 'poolPath',
                type: 'address[]',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBatchActionsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_instructions',
        type: 'tuple[]',
        components: [
          {
            name: 'usePrevAmountOut',
            type: 'bool',
          },
          {
            name: 'action',
            type: 'uint8',
          },
          {
            name: 'legoId',
            type: 'uint16',
          },
          {
            name: 'asset',
            type: 'address',
          },
          {
            name: 'target',
            type: 'address',
          },
          {
            name: 'amount',
            type: 'uint256',
          },
          {
            name: 'asset2',
            type: 'address',
          },
          {
            name: 'amount2',
            type: 'uint256',
          },
          {
            name: 'minOut1',
            type: 'uint256',
          },
          {
            name: 'minOut2',
            type: 'uint256',
          },
          {
            name: 'tickLower',
            type: 'int24',
          },
          {
            name: 'tickUpper',
            type: 'int24',
          },
          {
            name: 'extraData',
            type: 'bytes32',
          },
          {
            name: 'auxData',
            type: 'bytes32',
          },
          {
            name: 'swapInstructions',
            type: 'tuple[]',
            components: [
              {
                name: 'legoId',
                type: 'uint256',
              },
              {
                name: 'amountIn',
                type: 'uint256',
              },
              {
                name: 'minAmountOut',
                type: 'uint256',
              },
              {
                name: 'tokenPath',
                type: 'address[]',
              },
              {
                name: 'poolPath',
                type: 'address[]',
              },
            ],
          },
        ],
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBatchActionsHash',
    inputs: [
      {
        name: '_agentWrapper',
        type: 'address',
      },
      {
        name: '_userWallet',
        type: 'address',
      },
      {
        name: '_instructions',
        type: 'tuple[]',
        components: [
          {
            name: 'usePrevAmountOut',
            type: 'bool',
          },
          {
            name: 'action',
            type: 'uint8',
          },
          {
            name: 'legoId',
            type: 'uint16',
          },
          {
            name: 'asset',
            type: 'address',
          },
          {
            name: 'target',
            type: 'address',
          },
          {
            name: 'amount',
            type: 'uint256',
          },
          {
            name: 'asset2',
            type: 'address',
          },
          {
            name: 'amount2',
            type: 'uint256',
          },
          {
            name: 'minOut1',
            type: 'uint256',
          },
          {
            name: 'minOut2',
            type: 'uint256',
          },
          {
            name: 'tickLower',
            type: 'int24',
          },
          {
            name: 'tickUpper',
            type: 'int24',
          },
          {
            name: 'extraData',
            type: 'bytes32',
          },
          {
            name: 'auxData',
            type: 'bytes32',
          },
          {
            name: 'swapInstructions',
            type: 'tuple[]',
            components: [
              {
                name: 'legoId',
                type: 'uint256',
              },
              {
                name: 'amountIn',
                type: 'uint256',
              },
              {
                name: 'minAmountOut',
                type: 'uint256',
              },
              {
                name: 'tokenPath',
                type: 'address[]',
              },
              {
                name: 'poolPath',
                type: 'address[]',
              },
            ],
          },
        ],
      },
      {
        name: '_nonce',
        type: 'uint256',
      },
      {
        name: '_expiration',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
      },
      {
        name: '',
        type: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
] as const

export const deployAddress: Address | undefined = '0x4586793C8a53bdcE44E8726d4eFeDAC35EdAbd4c'

export type Contract = {
  calls: {
    getTransferFundsHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      recipient: `0x${string}`,
      asset?: `0x${string}`,
      amount?: bigint,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getDepositForYieldHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      asset: `0x${string}`,
      vaultAddr?: `0x${string}`,
      amount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getWithdrawFromYieldHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      vaultToken: `0x${string}`,
      amount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getRebalanceYieldPositionHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      fromLegoId: bigint,
      fromVaultToken: `0x${string}`,
      toLegoId: bigint,
      toVaultAddr?: `0x${string}`,
      fromVaultAmount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getSwapTokensHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      swapInstructions: {
        legoId: bigint
        amountIn: bigint
        minAmountOut: bigint
        tokenPath: `0x${string}`[]
        poolPath: `0x${string}`[]
      }[],
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getMintOrRedeemAssetHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      tokenIn: `0x${string}`,
      tokenOut: `0x${string}`,
      amountIn?: bigint,
      minAmountOut?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getConfirmMintOrRedeemAssetHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      tokenIn: `0x${string}`,
      tokenOut: `0x${string}`,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getAddCollateralHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      asset: `0x${string}`,
      amount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getRemoveCollateralHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      asset: `0x${string}`,
      amount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getBorrowHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      borrowAsset: `0x${string}`,
      amount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getRepayDebtHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      paymentAsset: `0x${string}`,
      paymentAmount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getClaimRewardsHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      rewardToken?: `0x${string}`,
      rewardAmount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getConvertWethToEthHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      amount?: bigint,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getConvertEthToWethHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      amount?: bigint,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getAddLiquidityHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      pool: `0x${string}`,
      tokenA: `0x${string}`,
      tokenB: `0x${string}`,
      amountA?: bigint,
      amountB?: bigint,
      minAmountA?: bigint,
      minAmountB?: bigint,
      minLpAmount?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getRemoveLiquidityHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      pool: `0x${string}`,
      tokenA: `0x${string}`,
      tokenB: `0x${string}`,
      lpToken: `0x${string}`,
      lpAmount?: bigint,
      minAmountA?: bigint,
      minAmountB?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getAddLiquidityConcentratedHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      nftAddr: `0x${string}`,
      nftTokenId: bigint,
      pool: `0x${string}`,
      tokenA: `0x${string}`,
      tokenB: `0x${string}`,
      amountA?: bigint,
      amountB?: bigint,
      tickLower?: unknown,
      tickUpper?: unknown,
      minAmountA?: bigint,
      minAmountB?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getRemoveLiquidityConcentratedHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      legoId: bigint,
      nftAddr: `0x${string}`,
      nftTokenId: bigint,
      pool: `0x${string}`,
      tokenA: `0x${string}`,
      tokenB: `0x${string}`,
      liqToRemove?: bigint,
      minAmountA?: bigint,
      minAmountB?: bigint,
      extraData?: `0x${string}`,
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
    getBatchActionsHash: (
      agentWrapper: `0x${string}`,
      userWallet: `0x${string}`,
      instructions: {
        usePrevAmountOut: boolean
        action: number
        legoId: number
        asset: `0x${string}`
        target: `0x${string}`
        amount: bigint
        asset2: `0x${string}`
        amount2: bigint
        minOut1: bigint
        minOut2: bigint
        tickLower: unknown
        tickUpper: unknown
        extraData: `0x${string}`
        auxData: `0x${string}`
        swapInstructions: {
          legoId: bigint
          amountIn: bigint
          minAmountOut: bigint
          tokenPath: `0x${string}`[]
          poolPath: `0x${string}`[]
        }[]
      }[],
      nonce?: bigint,
      expiration?: bigint,
    ) => Promise<[`0x${string}`, bigint, bigint]>
  }
  mutations: {}
  events: {}
}

export type Calls = keyof Contract['calls']
export type Request<M extends Calls> = {
  contractName: 'SignatureHelper'
  method: M
  args: ExtractArgs<Contract['calls'][M]>
  address: Address | undefined
  deployAddress: Address | undefined
  defaultValue: Awaited<ReturnType<Contract['calls'][M]>> | undefined
  getAbi: () => typeof abi
  with: (options: { contractAddress?: Address; defaultValue?: Awaited<ReturnType<Contract['calls'][M]>> }) => Request<M>
  defaultTo: (defaultValue: Awaited<ReturnType<Contract['calls'][M]>>) => Request<M>
  at: (address: Address) => Request<M>
}
export type CallReturn<M extends Calls> = NonNullable<Request<M>['defaultValue']>

function getRequest<M extends Calls>(
  method: M,
  args: ExtractArgs<Contract['calls'][M]>,
  contractAddressOrOptions?:
    | Address
    | {
        contractAddress?: Address
        defaultValue?: Awaited<ReturnType<Contract['calls'][M]>>
      },
): Request<M> {
  const address =
    typeof contractAddressOrOptions === 'string' ? contractAddressOrOptions : contractAddressOrOptions?.contractAddress
  const defaultValue = typeof contractAddressOrOptions === 'string' ? undefined : contractAddressOrOptions?.defaultValue

  const call = {
    contractName: 'SignatureHelper' as const,
    method,
    args,
    address,
    deployAddress,
    defaultValue,
    getAbi: () => abi,
    with: (options: { contractAddress?: Address; defaultValue?: Awaited<ReturnType<Contract['calls'][M]>> }) => {
      call.address = options.contractAddress
      call.defaultValue = options.defaultValue
      return call as Request<M>
    },
    defaultTo: (defaultValue: Awaited<ReturnType<Contract['calls'][M]>>) => {
      call.defaultValue = defaultValue
      return call as Request<M>
    },
    at: (address: Address) => {
      call.address = address
      return call as Request<M>
    },
  } as Request<M>

  return call
}

type CallType = {
  [K in Calls]: (...args: ExtractArgs<Contract['calls'][K]>) => ReturnType<typeof getRequest<K>>
}

export const call: CallType = {
  getTransferFundsHash: (...args: ExtractArgs<Contract['calls']['getTransferFundsHash']>) =>
    getRequest('getTransferFundsHash', args),
  getDepositForYieldHash: (...args: ExtractArgs<Contract['calls']['getDepositForYieldHash']>) =>
    getRequest('getDepositForYieldHash', args),
  getWithdrawFromYieldHash: (...args: ExtractArgs<Contract['calls']['getWithdrawFromYieldHash']>) =>
    getRequest('getWithdrawFromYieldHash', args),
  getRebalanceYieldPositionHash: (...args: ExtractArgs<Contract['calls']['getRebalanceYieldPositionHash']>) =>
    getRequest('getRebalanceYieldPositionHash', args),
  getSwapTokensHash: (...args: ExtractArgs<Contract['calls']['getSwapTokensHash']>) =>
    getRequest('getSwapTokensHash', args),
  getMintOrRedeemAssetHash: (...args: ExtractArgs<Contract['calls']['getMintOrRedeemAssetHash']>) =>
    getRequest('getMintOrRedeemAssetHash', args),
  getConfirmMintOrRedeemAssetHash: (...args: ExtractArgs<Contract['calls']['getConfirmMintOrRedeemAssetHash']>) =>
    getRequest('getConfirmMintOrRedeemAssetHash', args),
  getAddCollateralHash: (...args: ExtractArgs<Contract['calls']['getAddCollateralHash']>) =>
    getRequest('getAddCollateralHash', args),
  getRemoveCollateralHash: (...args: ExtractArgs<Contract['calls']['getRemoveCollateralHash']>) =>
    getRequest('getRemoveCollateralHash', args),
  getBorrowHash: (...args: ExtractArgs<Contract['calls']['getBorrowHash']>) => getRequest('getBorrowHash', args),
  getRepayDebtHash: (...args: ExtractArgs<Contract['calls']['getRepayDebtHash']>) =>
    getRequest('getRepayDebtHash', args),
  getClaimRewardsHash: (...args: ExtractArgs<Contract['calls']['getClaimRewardsHash']>) =>
    getRequest('getClaimRewardsHash', args),
  getConvertWethToEthHash: (...args: ExtractArgs<Contract['calls']['getConvertWethToEthHash']>) =>
    getRequest('getConvertWethToEthHash', args),
  getConvertEthToWethHash: (...args: ExtractArgs<Contract['calls']['getConvertEthToWethHash']>) =>
    getRequest('getConvertEthToWethHash', args),
  getAddLiquidityHash: (...args: ExtractArgs<Contract['calls']['getAddLiquidityHash']>) =>
    getRequest('getAddLiquidityHash', args),
  getRemoveLiquidityHash: (...args: ExtractArgs<Contract['calls']['getRemoveLiquidityHash']>) =>
    getRequest('getRemoveLiquidityHash', args),
  getAddLiquidityConcentratedHash: (...args: ExtractArgs<Contract['calls']['getAddLiquidityConcentratedHash']>) =>
    getRequest('getAddLiquidityConcentratedHash', args),
  getRemoveLiquidityConcentratedHash: (...args: ExtractArgs<Contract['calls']['getRemoveLiquidityConcentratedHash']>) =>
    getRequest('getRemoveLiquidityConcentratedHash', args),
  getBatchActionsHash: (...args: ExtractArgs<Contract['calls']['getBatchActionsHash']>) =>
    getRequest('getBatchActionsHash', args),
}

export type SDK = {
  deployAddress: Address | undefined
  abi: typeof abi
  getTransferFundsHash: (
    ...args: ExtractArgs<Contract['calls']['getTransferFundsHash']>
  ) => Promise<CallReturn<'getTransferFundsHash'>>
  getDepositForYieldHash: (
    ...args: ExtractArgs<Contract['calls']['getDepositForYieldHash']>
  ) => Promise<CallReturn<'getDepositForYieldHash'>>
  getWithdrawFromYieldHash: (
    ...args: ExtractArgs<Contract['calls']['getWithdrawFromYieldHash']>
  ) => Promise<CallReturn<'getWithdrawFromYieldHash'>>
  getRebalanceYieldPositionHash: (
    ...args: ExtractArgs<Contract['calls']['getRebalanceYieldPositionHash']>
  ) => Promise<CallReturn<'getRebalanceYieldPositionHash'>>
  getSwapTokensHash: (
    ...args: ExtractArgs<Contract['calls']['getSwapTokensHash']>
  ) => Promise<CallReturn<'getSwapTokensHash'>>
  getMintOrRedeemAssetHash: (
    ...args: ExtractArgs<Contract['calls']['getMintOrRedeemAssetHash']>
  ) => Promise<CallReturn<'getMintOrRedeemAssetHash'>>
  getConfirmMintOrRedeemAssetHash: (
    ...args: ExtractArgs<Contract['calls']['getConfirmMintOrRedeemAssetHash']>
  ) => Promise<CallReturn<'getConfirmMintOrRedeemAssetHash'>>
  getAddCollateralHash: (
    ...args: ExtractArgs<Contract['calls']['getAddCollateralHash']>
  ) => Promise<CallReturn<'getAddCollateralHash'>>
  getRemoveCollateralHash: (
    ...args: ExtractArgs<Contract['calls']['getRemoveCollateralHash']>
  ) => Promise<CallReturn<'getRemoveCollateralHash'>>
  getBorrowHash: (...args: ExtractArgs<Contract['calls']['getBorrowHash']>) => Promise<CallReturn<'getBorrowHash'>>
  getRepayDebtHash: (
    ...args: ExtractArgs<Contract['calls']['getRepayDebtHash']>
  ) => Promise<CallReturn<'getRepayDebtHash'>>
  getClaimRewardsHash: (
    ...args: ExtractArgs<Contract['calls']['getClaimRewardsHash']>
  ) => Promise<CallReturn<'getClaimRewardsHash'>>
  getConvertWethToEthHash: (
    ...args: ExtractArgs<Contract['calls']['getConvertWethToEthHash']>
  ) => Promise<CallReturn<'getConvertWethToEthHash'>>
  getConvertEthToWethHash: (
    ...args: ExtractArgs<Contract['calls']['getConvertEthToWethHash']>
  ) => Promise<CallReturn<'getConvertEthToWethHash'>>
  getAddLiquidityHash: (
    ...args: ExtractArgs<Contract['calls']['getAddLiquidityHash']>
  ) => Promise<CallReturn<'getAddLiquidityHash'>>
  getRemoveLiquidityHash: (
    ...args: ExtractArgs<Contract['calls']['getRemoveLiquidityHash']>
  ) => Promise<CallReturn<'getRemoveLiquidityHash'>>
  getAddLiquidityConcentratedHash: (
    ...args: ExtractArgs<Contract['calls']['getAddLiquidityConcentratedHash']>
  ) => Promise<CallReturn<'getAddLiquidityConcentratedHash'>>
  getRemoveLiquidityConcentratedHash: (
    ...args: ExtractArgs<Contract['calls']['getRemoveLiquidityConcentratedHash']>
  ) => Promise<CallReturn<'getRemoveLiquidityConcentratedHash'>>
  getBatchActionsHash: (
    ...args: ExtractArgs<Contract['calls']['getBatchActionsHash']>
  ) => Promise<CallReturn<'getBatchActionsHash'>>
}

export function toSdk(publicClient?: PublicClient, walletClient?: WalletClient): SDK {
  return {
    deployAddress,
    abi,
    // Queries
    getTransferFundsHash: (...args: ExtractArgs<Contract['calls']['getTransferFundsHash']>) =>
      singleQuery(publicClient!, call.getTransferFundsHash(...args)) as Promise<CallReturn<'getTransferFundsHash'>>,
    getDepositForYieldHash: (...args: ExtractArgs<Contract['calls']['getDepositForYieldHash']>) =>
      singleQuery(publicClient!, call.getDepositForYieldHash(...args)) as Promise<CallReturn<'getDepositForYieldHash'>>,
    getWithdrawFromYieldHash: (...args: ExtractArgs<Contract['calls']['getWithdrawFromYieldHash']>) =>
      singleQuery(publicClient!, call.getWithdrawFromYieldHash(...args)) as Promise<
        CallReturn<'getWithdrawFromYieldHash'>
      >,
    getRebalanceYieldPositionHash: (...args: ExtractArgs<Contract['calls']['getRebalanceYieldPositionHash']>) =>
      singleQuery(publicClient!, call.getRebalanceYieldPositionHash(...args)) as Promise<
        CallReturn<'getRebalanceYieldPositionHash'>
      >,
    getSwapTokensHash: (...args: ExtractArgs<Contract['calls']['getSwapTokensHash']>) =>
      singleQuery(publicClient!, call.getSwapTokensHash(...args)) as Promise<CallReturn<'getSwapTokensHash'>>,
    getMintOrRedeemAssetHash: (...args: ExtractArgs<Contract['calls']['getMintOrRedeemAssetHash']>) =>
      singleQuery(publicClient!, call.getMintOrRedeemAssetHash(...args)) as Promise<
        CallReturn<'getMintOrRedeemAssetHash'>
      >,
    getConfirmMintOrRedeemAssetHash: (...args: ExtractArgs<Contract['calls']['getConfirmMintOrRedeemAssetHash']>) =>
      singleQuery(publicClient!, call.getConfirmMintOrRedeemAssetHash(...args)) as Promise<
        CallReturn<'getConfirmMintOrRedeemAssetHash'>
      >,
    getAddCollateralHash: (...args: ExtractArgs<Contract['calls']['getAddCollateralHash']>) =>
      singleQuery(publicClient!, call.getAddCollateralHash(...args)) as Promise<CallReturn<'getAddCollateralHash'>>,
    getRemoveCollateralHash: (...args: ExtractArgs<Contract['calls']['getRemoveCollateralHash']>) =>
      singleQuery(publicClient!, call.getRemoveCollateralHash(...args)) as Promise<
        CallReturn<'getRemoveCollateralHash'>
      >,
    getBorrowHash: (...args: ExtractArgs<Contract['calls']['getBorrowHash']>) =>
      singleQuery(publicClient!, call.getBorrowHash(...args)) as Promise<CallReturn<'getBorrowHash'>>,
    getRepayDebtHash: (...args: ExtractArgs<Contract['calls']['getRepayDebtHash']>) =>
      singleQuery(publicClient!, call.getRepayDebtHash(...args)) as Promise<CallReturn<'getRepayDebtHash'>>,
    getClaimRewardsHash: (...args: ExtractArgs<Contract['calls']['getClaimRewardsHash']>) =>
      singleQuery(publicClient!, call.getClaimRewardsHash(...args)) as Promise<CallReturn<'getClaimRewardsHash'>>,
    getConvertWethToEthHash: (...args: ExtractArgs<Contract['calls']['getConvertWethToEthHash']>) =>
      singleQuery(publicClient!, call.getConvertWethToEthHash(...args)) as Promise<
        CallReturn<'getConvertWethToEthHash'>
      >,
    getConvertEthToWethHash: (...args: ExtractArgs<Contract['calls']['getConvertEthToWethHash']>) =>
      singleQuery(publicClient!, call.getConvertEthToWethHash(...args)) as Promise<
        CallReturn<'getConvertEthToWethHash'>
      >,
    getAddLiquidityHash: (...args: ExtractArgs<Contract['calls']['getAddLiquidityHash']>) =>
      singleQuery(publicClient!, call.getAddLiquidityHash(...args)) as Promise<CallReturn<'getAddLiquidityHash'>>,
    getRemoveLiquidityHash: (...args: ExtractArgs<Contract['calls']['getRemoveLiquidityHash']>) =>
      singleQuery(publicClient!, call.getRemoveLiquidityHash(...args)) as Promise<CallReturn<'getRemoveLiquidityHash'>>,
    getAddLiquidityConcentratedHash: (...args: ExtractArgs<Contract['calls']['getAddLiquidityConcentratedHash']>) =>
      singleQuery(publicClient!, call.getAddLiquidityConcentratedHash(...args)) as Promise<
        CallReturn<'getAddLiquidityConcentratedHash'>
      >,
    getRemoveLiquidityConcentratedHash: (
      ...args: ExtractArgs<Contract['calls']['getRemoveLiquidityConcentratedHash']>
    ) =>
      singleQuery(publicClient!, call.getRemoveLiquidityConcentratedHash(...args)) as Promise<
        CallReturn<'getRemoveLiquidityConcentratedHash'>
      >,
    getBatchActionsHash: (...args: ExtractArgs<Contract['calls']['getBatchActionsHash']>) =>
      singleQuery(publicClient!, call.getBatchActionsHash(...args)) as Promise<CallReturn<'getBatchActionsHash'>>,

    // Mutations
  }
}
